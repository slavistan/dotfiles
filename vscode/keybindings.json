[
  /* *************************** */
  /* Unbind conflicting defaults */
  /* *************************** */
  {
    "key": "ctrl+k f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f12",
    "command": "-goToPreviousReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "f11",
    "command": "-workbench.action.toggleFullScreen"
  },
  {
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.terminal.goToRecentDirectory"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl-p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems"
  },
  {
    "key": "ctrl+x",
    "command": "-editor.action.clipboardCutAction"
  }

  /* ******************* */
  /* Custom key bindings */
  /* ******************* */
  {
    "key": "ctrl+l",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+k ctrl+m",
    "command": "editor.action.format"
  },
  {
    /* Choose obscure hotkey to bind attach-to-debugger config to. To be used
     * by xdotool to mimick the missing vscode cli integration so we can just
     * start a debugging process via the shell. Utterly retarded. */
    "key": "ctrl+shift+f5",
    "command": "launches.PythonAttachDebuggerLocalhost56789"
  },
  {
    "key": "ctrl+n",
    "command": "multiCommand.nextSearchResult",
    "when": "sideBarFocus && activeViewlet == 'workbench.view.search'"
  },
  {
    "key": "ctrl+p",
    "command": "multiCommand.previousSearchResult",
    "when": "sideBarFocus && activeViewlet == 'workbench.view.search'"
  },
  {
    // FIXME: Ctrl+r doesn't work :( have to use alt+r
    "key": "ctrl+r",
    "command": "toggleSearchEditorRegex",
    "when": "sideBarFocus && activeViewlet == 'workbench.view.search'"
  },
  {
    /* Show and hide sidebar. */
    "key": "ctrl+shift+m",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    /* Place focus on editor. Used to jump from sidebar focus to the editor. */
    "key": "ctrl+shift+q",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorTextFocus"
  },
  /**
   * Navigate between editor groups with ctrl+w and vim-keys.
   */
  {
    "key": "ctrl+w l",
    "command": "workbench.action.focusRightGroupWithoutWrap",
    "when": "!terminalFocus && (( editorFocus && neovim.mode == normal ) || ( activeEditor == workbench.editor.notebook && neovim.mode != insert ))"
  },
  {
    "key": "ctrl+w h",
    "command": "workbench.action.focusLeftGroupWithoutWrap",
    "when": "!terminalFocus && (( editorFocus && neovim.mode == normal ) || ( activeEditor == workbench.editor.notebook && neovim.mode != insert ))"
  },
  {
    "key": "ctrl+w k",
    "command": "workbench.action.focusAboveGroupWithoutWrap",
    "when": "!terminalFocus && (( editorFocus && neovim.mode == normal ) || ( activeEditor == workbench.editor.notebook && neovim.mode != insert ))"
  },
  {
    "key": "ctrl+w j",
    "command": "workbench.action.focusBelowGroupWithoutWrap",
    "when": "!terminalFocus && (( editorFocus && neovim.mode == normal ) || ( activeEditor == workbench.editor.notebook && neovim.mode != insert ))"
  },
  /**
   * Move active editor between editor groups with ctrl+w and ctrl+vim-keys.
   */
  {
    "key": "ctrl+w ctrl+l",
    "command": "workbench.action.moveEditorToRightGroup",
    "when": "!terminalFocus && (( editorFocus && neovim.mode == normal ) || ( activeEditor == workbench.editor.notebook && neovim.mode != insert ))"
  },
  {
    "key": "ctrl+w ctrl+h",
    "command": "workbench.action.moveEditorToLeftGroup",
    "when": "!terminalFocus && (( editorFocus && neovim.mode == normal ) || ( activeEditor == workbench.editor.notebook && neovim.mode != insert ))"
  },
  {
    "key": "ctrl+w ctrl+k",
    "command": "workbench.action.moveEditorToAboveGroup",
    "when": "!terminalFocus && (( editorFocus && neovim.mode == normal ) || ( activeEditor == workbench.editor.notebook && neovim.mode != insert ))"
  },
  {
    "key": "ctrl+w ctrl+j",
    "command": "workbench.action.moveEditorToBelowGroup",
    "when": "!terminalFocus && (( editorFocus && neovim.mode == normal ) || ( activeEditor == workbench.editor.notebook && neovim.mode != insert ))"
  },
]
