" vim: filetype=vifm :

" ------------------------------------------------------------------------------
" TODO: Display folder icon before directories and something other before
"       files. Like so: https://s14-eu5.startpage.com/cgi-bin/serveimage?url=https%3A%2F%2Fvifm.info%2Fimages%2Fv0.10.1-beta%2Fmiller-preview-preview.gif&sp=598cfa90bb9e5adc50d8092b24228f8a&anticache=178110

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.

set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash

" This is how many directories to store in the directory history.

set history=100

" Hide linenumbers by default and add a hotkey to toggle them.

set nonumber
nnoremap ,n :set nonumber!<cr>


" Hide dotfiles by default and add a hotkey to toggle the setting.

set nodotfiles
nnoremap ,h :set nodotfiles!<cr>

" Automatically resolve symbolic links on l or Enter.
" TODO: Was macht das?

set nofollowlinks

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.

set vimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set runexec

" Selected color scheme

colorscheme Default

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=%Y-%m-%d+%H:%M

" Show list of matches on tab completion in command-line mode

set wildmenu

" Display completions in a form of popup with descriptions of the matches

set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.

set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" Don't highlight search results automatically

set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
" TODO: Keep cursor centered at top and bottom of list.

set scrolloff=999

" Don't do too many requests to slow file systems

if !has('win')
    set slowfs=curlftpfs
endif

" Set custom status line look
" TODO: Adjust

set statusline="  Hint: %z%= %A %10u:%-7g %15s %20d  "

" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark h ~/
mark t /tmp/
mark d /home/shuell/projects/dotfiles

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window - TODO: What is that?

command! run !! ./%f
command! mkcd :mkdir %a | cd %a
command! reload :write | restart

" ------------------------------------------------------------------------------

" Set file associations
"
"   :filextype patter1,pattern2 <default-command>,<alternative-command>
"   :filetype patter1,pattern2 <default-command>,<alternative-command>
"   :fileviewer patter1,pattern2 <default-command>,<alternative-command>
"
" Commands are executed as if they were entered directly like so
"
"   :command<cr>
"
" %c contains the selected file's name.
"
filextype *.pdf,*.djvu,*.ps,*.eps,*.ps.gz zathura %c
filextype *.html,*.htm $BROWSER %c &
fileviewer *.pdf pdftotext -nopgbrk %c -
filetype *.o nm %f | less

" Notify about missing association by default.
fileviewer * echo "vifm: No previewer selected for '%c'."
filextype * notify-send "vifm: No type association for '%c'"
filetype * notify-send "vifm: No type association for '%c'"

" HACK: 'vi[x]cmd %c' is executed when pressing `l' on a file. This binding
"       thus does nothing. Files are opened using <cr>.
set vicmd='head -n 1'
set vixcmd='head -n 1'

" ------------------------------------------------------------------------------

" File prefixes
source $DOTFILES/vifm/plugins/vifm_devicons/SETUP

" What should be saved automatically between vifm sessions.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.
set vifminfo=dhistory,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" ------------------------------------------------------------------------------

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
" set viewcolumns=-{name}..,6{}.

" Filter-out build and temporary files
"
" filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" ------------------------------------------------------------------------------

" Sample mappings

" Start shell in current directory
nnoremap s :shell<cr>
" Start shell in directory under cursor
" TODO: Enfore that %c is a directory.
nnoremap os :cd %c | shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Edit selected file(s) in vim
" TODO: Limit selection to files. %f may include directories by default.
nnoremap ov :!nvim %f<cr>

" Interaction with system clipboard
" TODO: Use 'has(wsl)' for configuring Windows.
if executable('copyq')
    " Yank active directory's full path into clipboard
    nnoremap yd :!echo $(realpath "%d") | copyq copy -<cr>
    " Yank selected item's full path into clipboard
    nnoremap yf :!echo $(realpath $(dirname "%f")/"%f") | copyq copy -<cr>
else
  echo '[WARN] ''copyq'' not found.'
endif

""" Mappings for faster renaming

" append to name
nnoremap A cw
" prepend to name
nnoremap I cw<c-a>
" rename completely
nnoremap cc cw<c-u>

" TODO:
"       o+<hotkey> - Datei in selbem Fenster Ã¶ffnen (terminal preview)

" Create a new directory
" TODO: Create a proper function which shall delete the directory if the
"       creation is interrupted
nnoremap i :mkdir __new_directory__<cr>cw<c-u>

" Open (detached) terminal in current directory
nnoremap ,t :!st &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" <cr> opens a file according to the file associations
nnoremap <cr> :file &<cr>l
