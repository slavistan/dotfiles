" Configuration pertaining to the C and C++ languages

autocmd FileType cpp,c call SetCppOptions()
function SetCppOptions()

""" ALE configuration

" Many linters and LSP servers make use of a compilation database which is
" generated by CMake in the build directory. We symlink the file into the
" project's root directory to avoid any trouble with programs not being able
" to locate it. The next variable tells ALE to search for the database.
let g:ale_c_parse_compile_commands=1

" For now we only want to enable those linters we explicitly specified. Keep
" the madness to a minimum during this phase of experimentation.
let g:ale_linters_explicit=1

" Now list the linters and tools we want to use and configure them afterwards.
if !exists('g:ale_linters')
  let g:ale_linters={}
endif
let g:ale_linters.cpp = ['clang', 'clangd']

" Enable all warnings for clang and use the most recent standard.
let g:ale_cpp_clang_options='-std=c++20 -Wall'

" clangd's brains are based on an 'index' of the project. Provide the index by
" generating it manually using the clangd-indexer tool, or let clangd do it.
" We choose the latter method by passing it the '-background-index' flag.
let g:ale_cpp_clangd_options='-background-index'

endfunction
